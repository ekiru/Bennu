Bennu is a code-generator, written in Perl 6, for a Perl 6 to LLVM compiler. It currently uses the SIC format produced by the Yapsi Perl 6 in Perl 6 compiler, but eventually, we might end up implementing our own parser for Perl 6.

The Bennu is a mythical Egyptian bird that is similar to the phoenix. It was also said to be the soul of Ra. Some Egyptian myths claim that the Bennu created itself from the fire burned on a holy tree in Ra's temple. Similarly, Bennu is Perl 6 creating itself.

To use Bennu, you need Yapsi to turn your Perl 6 into SIC, and you need LLVM to run or compile to native code the LLVM assembly Bennu generates.

First, use "yapsi --taget=sic" to convert the Perl 6 code into SIC. Then use the "bennu" script on the generate SIC. After that, you can either use "llvm-as" to build a LLVM bitcode file from the .ll file and execute it with the "lli" command or you can compile it to native assembly code with "llc" and subsequently link it("gcc foo.s" works for me, but you can probably get whatever linker you want to do the right thing with the right options, too). 